name: build

on: [push, pull_request]

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test:
    name: Test - ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry env use "${{ matrix.python-version }}"
          poetry install --no-interaction

      - name: Run tests
        run: poetry run invoke tests

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Validate links in Markdown files
        uses: JustinBeckwith/linkinator-action@v1
        with:
          retry: true

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry env use "3.9"
          poetry install --no-interaction

      - name: Run linters
        run: poetry run invoke lint --diff

  deploy:
    name: Deploy
    environment: Deployment
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref=='refs/heads/main' && github.event_name!='pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Check release
        id: check_release
        continue-on-error: true
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry githubrelease httpx==0.16.1 autopub
          autopub check

      - name: Publish
        if: steps.check_release.outcome=='success'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          git remote set-url origin https://$GITHUB_TOKEN@github.com/${{ github.repository }}
          autopub prepare
          poetry build
          autopub commit
          autopub githubrelease
          poetry publish -u __token__ -p $PYPI_PASSWORD
